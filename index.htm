<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Cache-Control" content="no-store, no-cache, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <link rel="icon" type="image/png" sizes="32x32" href="favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="favicon-16x16.png">
    <link rel="shortcut icon" type="image/png" href="favicon.png">
    <link rel="apple-touch-icon" sizes="180x180" href="apple-touch-icon-180x180.png">
    <link rel="apple-touch-icon" sizes="152x152" href="apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="144x144" href="apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="114x114" href="apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="76x76" href="apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="72x72" href="apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="60x60" href="apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="57x57" href="apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" href="apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="512x512" href="android-chrome-512x512.png">
    <link rel="icon" type="image/png" sizes="192x192" href="android-chrome-192x192.png">
    <link rel="icon" type="image/png" sizes="144x144" href="android-chrome-144x144.png">
    <link rel="icon" type="image/png" sizes="96x96" href="android-chrome-96x96.png">
    <link rel="icon" type="image/png" sizes="48x48" href="android-chrome-48x48.png">
    <meta name="msapplication-TileImage" content="mstile-144x144.png">
    <meta name="msapplication-TileColor" content="#1a1626">
    <meta name="msapplication-config" content="browserconfig.xml">
    <link rel="manifest" href="manifest.json">
    <meta name="theme-color" content="#1a1626">
    <meta name="msapplication-navbutton-color" content="#1a1626">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-title" content="rabbit.wine">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="application-name" content="rabbit.wine">
    <meta name="apple-touch-fullscreen" content="yes">
    <meta name="format-detection" content="telephone=no">
    <title>Rabbit Wine</title>
    <link rel="stylesheet" href="mainmenu.css">
    <link rel="stylesheet" href="stars.css">
    <link rel="stylesheet" href="modals.css">
    <script src="miniPlayer.js"></script>
</head>
<body>
    <div class="background-animation" id="backgroundAnimation"></div>
    <script>
    // Prevent bfcache and force reload if page is restored from cache
    if ('serviceWorker' in navigator) {
        navigator.serviceWorker.getRegistrations().then(function(registrations) {
            for(let registration of registrations) {
                registration.unregister();
            }
        });
    }
    window.addEventListener('pageshow', function(event) {
        if (event.persisted) {
            window.location.reload();
        }
    });
    // Detect if navigation is via back/forward
    window.skipMenuAnimation = false;
    try {
        // Use PerformanceNavigation API if available
        if (window.performance && performance.getEntriesByType) {
            const navs = performance.getEntriesByType('navigation');
            if (navs.length && navs[0].type === 'back_forward') {
                window.skipMenuAnimation = true;
            }
        }
        // Fallback: use sessionStorage flag
        if (sessionStorage.getItem('skipMenuAnimation') === '1') {
            window.skipMenuAnimation = true;
        }
        // Set flag for next navigation
        sessionStorage.setItem('skipMenuAnimation', '1');
    } catch (e) {}
    </script>
    
    <div class="intro-container">
        <div class="logo-container">
        <a href="#" id="aboutLogo">
            <img src="rabbitwine.png" alt="rabbit.wine logo" class="logo"></a>
        </div>
        
        <h1 class="title">Rabbit Wine</h1>
        
        <div class="features-grid">

            <a href="stickers" class="feature-card">
                <span class="feature-icon">🏷️</span>
                <h3 class="feature-title">Stickers</h3>
            </a>

            <a href="editor" class="feature-card">
                <span class="feature-icon">🎨</span>
                <h3 class="feature-title">Editor</h3>
            </a>

            <a href="objects" class="feature-card">
                <span class="feature-icon">🪨</span>
                <h3 class="feature-title">Objects</h3>
            </a>

            <a href="scroll" class="feature-card">
                <span class="feature-icon">📄</span>
                <h3 class="feature-title">Scroll</h3>
            </a>

            <a href="realities" class="feature-card">
                <span class="feature-icon">📷</span>
                <h3 class="feature-title">Realities</h3>
            </a>

            <a href="chaos" class="feature-card">
                <span class="feature-icon">🌀</span>
                <h3 class="feature-title">Chaos</h3>
            </a>


            <a href="space" class="feature-card">
                <span class="feature-icon">🌌</span>
                <h3 class="feature-title">Space</h3>
            </a>

            <a href="jams" class="feature-card">
                <span class="feature-icon">🎵</span>
                <h3 class="feature-title">Jams</h3>
            </a>

            <a href="ask" class="feature-card">
                <span class="feature-icon">🍷</span>
                <h3 class="feature-title">Ask</h3>
            </a>

        </div>

    </div>

    <script src="stars.js"></script>
    <script src="modals.js"></script>
    <script>
    // About modal on logo click
    document.addEventListener('DOMContentLoaded', function() {
        var logo = document.getElementById('aboutLogo');
        if (logo) {
            logo.addEventListener('click', function(e) {
                e.preventDefault();
                var year = new Date().getFullYear();
                var content = document.createElement('div');
                content.innerHTML = `
                  <div class="about-modal-btns" style="display: flex; flex-direction: column; gap: 18px; align-items: center; justify-content: center; margin-bottom: 18px;">
                    <button onclick="window.open('https://github.com/ircluzar/RabbitWine/', '_blank')">
                      <span style='font-size:2em; margin-right:10px;'>🐇</span>
                      <span>Get the source on GitHub</span>
                    </button>
                    <button onclick="window.open('https://redscientist.com/', '_blank')">
                      <span style='font-size:2em; margin-right:10px;'>🌐</span>
                      <span>Developer: redscientist.com</span>
                    </button>
                  </div>
                  <div style="text-align:center; font-weight:bold; margin: 22px 0 22px 0; font-size: 1.2em;">Rabbit Wine Gen 3</div>
                  <div class="about-modal-footer">
                    ${year} — Developed in the matrix under ircluzar's directives.
                  </div>
                `;
                window.Modals.open({
                  title: 'About Rabbit Wine',
                  content: content,
                  confirmText: 'Close',
                  showCancel: false
                });
            });
        }
    });
    </script>
    <script>
        // Fade in feature cards with staggered delays, unless coming from back/forward navigation
        document.addEventListener('DOMContentLoaded', () => {
            const cards = document.querySelectorAll('.feature-card');
            if (window.skipMenuAnimation) {
                cards.forEach(card => {
                    card.style.opacity = '1';
                    card.style.animation = 'none';
                    card.style.transform = 'none';
                    card.style.animationDelay = '0s';
                    card.classList.remove('fade-in'); // Remove animation class if present
                });
            } else {
                cards.forEach((card, i) => {
                    card.classList.add('fade-in');
                    card.style.animationDelay = (0.09 * i + 0.08) + 's';
                });
            }
        });
        // Add subtle hover effects to feature cards
        document.querySelectorAll('.feature-card').forEach(card => {
            card.addEventListener('mouseenter', () => {
                card.style.transform = 'translateY(-4px) scale(1.02)';
            });
            card.addEventListener('mouseleave', () => {
                card.style.transform = 'translateY(0) scale(1)';
            });
        });
    </script>
</body>
</html>